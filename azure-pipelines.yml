# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    
- task: GenerateReleaseNotes@0
  inputs:
    FromBuildId: "$(Build.BuildId)"
    ToBuildId: "$(PreviousBuildId)"
    ReleaseNotesPath: "GeneratedNotes"
    ReleaseNotesFile: "ReleaseNotes.md"
    AdditionalNote: '**Build Number: $(Build.BuildId)**'
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)

- task: XplatGenerateReleaseNotes@4
  inputs:
    outputfile: '$(Build.ArtifactStagingDirectory)/releasenotes.md'
    templateLocation: 'InLine'
    inlinetemplate: |
      # Release notes
      ## Note for release
    dumpPayloadToConsole: false
    dumpPayloadToFile: false
    replaceFile: True
    getParentsAndChildren: False
    getAllParents: False
    getIndirectPullRequests: False
    stopOnError: False
    considerPartiallySuccessfulReleases: False
    checkForManuallyLinkedWI: False
    wiqlFromTarget: 'WorkItems'